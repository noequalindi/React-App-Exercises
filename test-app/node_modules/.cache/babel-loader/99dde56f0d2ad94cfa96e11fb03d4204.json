{"ast":null,"code":"var _jsxFileName = \"/home/nqualindi/Desktop/REACT/React-App-Exercises/test-app/src/components/ContactList.js\";\nimport React, { Component } from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport 'flexboxgrid';\nexport default class ContactList extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(item) {\n    let event = window.event;\n    let targetElem = event.target;\n    let className = targetElem.classList.value;\n\n    if ('noFavorite' === className || 'favorite' === className) {\n      this.props.onFavoriteClick(item, className);\n    } else {\n      this.props.onContactSelect(item);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"u-center col-lg-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contacts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Contacts\"), React.createElement(Card, {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Favorite Contacts\"), this.props.favorites && this.props.favorites.map(contact => {\n      return React.createElement(ListGroup, {\n        key: contact.name,\n        variant: \"flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        onClick: () => this.handleClick(contact),\n        className: \"select\",\n        key: contact.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, contact.smallImageURL ? React.createElement(\"img\", {\n        src: contact.smallImageURL,\n        className: \"thumbnail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"userSmall\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"favoriteContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"favorite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"userName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, contact.name), React.createElement(\"div\", {\n        className: \"subTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, contact.companyName, \" \"))));\n    }), React.createElement(\"span\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Others\"), this.props.others && this.props.others.map(contact => {\n      return React.createElement(ListGroup, {\n        key: contact.name,\n        variant: \"flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        onClick: () => this.handleClick(contact),\n        className: \"select\",\n        key: contact.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, contact.smallImageURL ? React.createElement(\"img\", {\n        src: contact.smallImageURL,\n        className: \"thumbnail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"userSmall\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"favoriteContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"noFavorite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"userName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, contact.name), React.createElement(\"div\", {\n        className: \"subTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, contact.companyName, \" \")));\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/nqualindi/Desktop/REACT/React-App-Exercises/test-app/src/components/ContactList.js"],"names":["React","Component","Card","ListGroup","ContactList","constructor","props","handleClick","bind","item","event","window","targetElem","target","className","classList","value","onFavoriteClick","onContactSelect","render","favorites","map","contact","name","id","smallImageURL","companyName","others"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,iBAAhC;AACA,OAAO,aAAP;AAGA,eAAe,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAE/CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,CAACE,IAAD,EAAO;AACd,QAAIC,KAAK,GAAGC,MAAM,CAACD,KAAnB;AACA,QAAIE,UAAU,GAAGF,KAAK,CAACG,MAAvB;AACA,QAAIC,SAAS,GAAGF,UAAU,CAACG,SAAX,CAAqBC,KAArC;;AAEA,QAAI,iBAAiBF,SAAjB,IAA8B,eAAeA,SAAjD,EAA4D;AACxD,WAAKR,KAAL,CAAWW,eAAX,CAA2BR,IAA3B,EAAiCK,SAAjC;AACH,KAFD,MAEO;AACH,WAAKR,KAAL,CAAWY,eAAX,CAA2BT,IAA3B;AACH;AAEJ;;AAEDU,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEQ,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAGM,KAAKb,KAAL,CAAWc,SAAX,IAAwB,KAAKd,KAAL,CAAWc,SAAX,CAAqBC,GAArB,CAAyBC,OAAO,IAAI;AAC1D,aACI,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,OAAO,CAACC,IAAxB;AAA8B,QAAA,OAAO,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,OAAO,EAAG,MAAM,KAAKhB,WAAL,CAAiBe,OAAjB,CAAhC;AAA4D,QAAA,SAAS,EAAC,QAAtE;AAA+E,QAAA,GAAG,EAAEA,OAAO,CAACE,EAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQF,OAAO,CAACG,aAAR,GACA;AAAK,QAAA,GAAG,EAAGH,OAAO,CAACG,aAAnB;AAAkC,QAAA,SAAS,EAAC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,GAGA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALR,EAOI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BH,OAAO,CAACC,IAApC,CAFJ,EAGA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BD,OAAO,CAACI,WAAnC,MAHA,CAPJ,CADJ,CADJ;AAgBE,KAjBoB,CAH9B,EAuBI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ,EAwBM,KAAKpB,KAAL,CAAWqB,MAAX,IAAqB,KAAKrB,KAAL,CAAWqB,MAAX,CAAkBN,GAAlB,CAAsBC,OAAO,IAAI;AACpD,aACA,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,OAAO,CAACC,IAAxB;AAA8B,QAAA,OAAO,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,OAAO,EAAG,MAAM,KAAKhB,WAAL,CAAiBe,OAAjB,CAAhC;AAA4D,QAAA,SAAS,EAAC,QAAtE;AAA+E,QAAA,GAAG,EAAEA,OAAO,CAACE,EAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQF,OAAO,CAACG,aAAR,GACA;AAAK,QAAA,GAAG,EAAGH,OAAO,CAACG,aAAnB;AAAkC,QAAA,SAAS,EAAC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,GAGA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALR,EAOI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPJ,EAUI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,OAAO,CAACC,IADb,CAVJ,EAaI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BD,OAAO,CAACI,WAAnC,MAbJ,CADJ,CADA;AAmBH,KApBsB,CAxB3B,CAFR,CADH,CADL,CADJ;AAyDH;;AA/E8C","sourcesContent":["import React, { Component } from 'react';\nimport { Card, ListGroup } from 'react-bootstrap'\nimport 'flexboxgrid'\n\n\nexport default class ContactList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(item) {\n        let event = window.event;\n        let targetElem = event.target;\n        let className = targetElem.classList.value;\n\n        if ('noFavorite' === className || 'favorite' === className) {\n            this.props.onFavoriteClick(item, className);\n        } else {\n            this.props.onContactSelect(item);\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                 <div className=\"u-center col-lg-8\">\n                    <div className=\"box\">\n                        <div className=\"contacts\">Contacts</div>\n                            <Card className=\"card\">\n                                <span className=\"title\">Favorite Contacts</span>\n\n                                { this.props.favorites && this.props.favorites.map(contact => {\n                                    return (\n                                        <ListGroup key={contact.name} variant=\"flush\">\n                                            <ListGroup.Item onClick={ () => this.handleClick(contact) } className=\"select\" key={contact.id} >\n                                                {\n                                                    contact.smallImageURL ?\n                                                    <img src={ contact.smallImageURL} className=\"thumbnail\"/>\n                                                    :\n                                                    <div className=\"userSmall\" />\n                                                }\n                                                <div className=\"favoriteContainer\">\n                                                    <div className=\"favorite\"></div>\n                                                    <span className=\"userName\">{contact.name}</span>\n                                                <div className=\"subTitle\">{contact.companyName } </div>\n                                                </div>\n                                            </ListGroup.Item>\n                                    </ListGroup>\n                                    )})\n                                }\n\n                                <span className=\"title\">Others</span>\n                                { this.props.others && this.props.others.map(contact => {\n                                    return (\n                                    <ListGroup key={contact.name} variant=\"flush\">\n                                        <ListGroup.Item onClick={ () => this.handleClick(contact) } className=\"select\" key={contact.id}>\n                                            {\n                                                contact.smallImageURL ?\n                                                <img src={ contact.smallImageURL} className=\"thumbnail\"/>\n                                                :\n                                                <div className=\"userSmall\" />\n                                            }\n                                            <div className=\"favoriteContainer\">\n                                                <div className=\"noFavorite\" />\n                                            </div>\n                                            <span className=\"userName\">\n                                                {contact.name}\n                                            </span>\n                                            <div className=\"subTitle\">{contact.companyName } </div>\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                    )\n                                })\n                                }\n                            </Card>\n                        </div>\n                    </div>\n             </div>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}